"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[899],{1456:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var o=t(4848),i=t(8453);const r={sidebar_position:1},s="Introduction",a={id:"introduction",title:"Introduction",description:"Transactional box is an implementation of the outbox and inbox pattern in .NET.",source:"@site/docs/introduction.md",sourceDirName:".",slug:"/introduction",permalink:"/docs/introduction",draft:!1,unlisted:!1,editUrl:"https://github.com/adimiko/TransactionalBox/tree/main/documentation/docs/introduction.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Getting Started",permalink:"/docs/getting-started"}},c={},d=[{value:"\ud83c\udff0 Architecture",id:"european_castle-architecture",level:2},{value:"Outbox",id:"outbox",level:3},{value:"Outbox Worker",id:"outbox-worker",level:3},{value:"Inbox Worker",id:"inbox-worker",level:3},{value:"Inbox",id:"inbox",level:3}];function l(e){const n={h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsx)(n.p,{children:"Transactional box is an implementation of the outbox and inbox pattern in .NET.\nEnsures eventual consistency when modules need to communicate with each other over the network."}),"\n",(0,o.jsx)(n.p,{children:"Examples of problems that occur during network communication:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"lost messages"}),"\n",(0,o.jsx)(n.li,{children:"the same messages were processed again"}),"\n",(0,o.jsx)(n.li,{children:"unavailable services"}),"\n"]}),"\n",(0,o.jsxs)(n.h2,{id:"european_castle-architecture",children:["\ud83c\udff0"," Architecture"]}),"\n",(0,o.jsx)(n.p,{children:"The transactional box consists of four basic components. The following diagrams show the basic flow (omits many details). They are designed to provide a general understanding of how transactional box works."}),"\n",(0,o.jsx)(n.h3,{id:"outbox",children:"Outbox"}),"\n",(0,o.jsx)(n.p,{children:"Outbox is responsible for adding messages to the storage."}),"\n",(0,o.jsx)("div",{align:"center",children:(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Outbox",src:t(3614).A+"",width:"742",height:"522"})})}),"\n",(0,o.jsx)(n.h3,{id:"outbox-worker",children:"Outbox Worker"}),"\n",(0,o.jsx)(n.p,{children:"Outbox worker is responsible for getting the messages from storage and adding them to the transport."}),"\n",(0,o.jsx)("div",{align:"center",children:(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Outbox Worker",src:t(6907).A+"",width:"822",height:"482"})})}),"\n",(0,o.jsx)(n.h3,{id:"inbox-worker",children:"Inbox Worker"}),"\n",(0,o.jsx)(n.p,{children:"Inbox worker is responsible for getting messages from transport and adding them to the storage."}),"\n",(0,o.jsx)("div",{align:"center",children:(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Inbox Worker",src:t(1442).A+"",width:"792",height:"468"})})}),"\n",(0,o.jsx)(n.h3,{id:"inbox",children:"Inbox"}),"\n",(0,o.jsx)(n.p,{children:"Inbox is responsible for processing messages from the storage."}),"\n",(0,o.jsx)("div",{align:"center",children:(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Inbox",src:t(9833).A+"",width:"836",height:"462"})})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},1442:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/diagram-inbox-worker-a621c910b609ae73b79c77cc3a707558.png"},9833:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/diagram-inbox-944bc2c59c546fdbed67a94183a6c9e2.png"},6907:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/diagram-outbox-worker-211066819395fb41cd98905760f8ee4e.png"},3614:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/diagram-outbox-f97070a2d84faab1d7b55f0054755269.png"},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(6540);const i={},r=o.createContext(i);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);