"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[770],{861:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>x,frontMatter:()=>r,metadata:()=>d,toc:()=>l});var t=s(4848),i=s(8453);const r={sidebar_position:3},o="Outbox",d={id:"outbox",title:"Outbox",description:"The outbox is responsible for adding messages to the storage  and then adding at least once to the transport.",source:"@site/docs/outbox.md",sourceDirName:".",slug:"/outbox",permalink:"/docs/outbox",draft:!1,unlisted:!1,editUrl:"https://github.com/adimiko/TransactionalBox/tree/main/documentation/docs/outbox.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/getting-started"},next:{title:"Inbox",permalink:"/docs/inbox"}},a={},l=[{value:"Outbox Message",id:"outbox-message",level:3},{value:"Outbox Definition",id:"outbox-definition",level:3},{value:"Adding a message to the outbox",id:"adding-a-message-to-the-outbox",level:3},{value:"Storage",id:"storage",level:2},{value:"Transport",id:"transport",level:2},{value:"Settings",id:"settings",level:2},{value:"Add messages to transport settings",id:"add-messages-to-transport-settings",level:3},{value:"Clean up outbox settings",id:"clean-up-outbox-settings",level:3},{value:"Configure serialization",id:"configure-serialization",level:3},{value:"Configure compression",id:"configure-compression",level:3}];function c(e){const n={admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"outbox",children:"Outbox"}),"\n",(0,t.jsx)(n.p,{children:"The outbox is responsible for adding messages to the storage  and then adding at least once to the transport."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'builder.Services.AddTransactionalBox(x =>\n{\n    x.AddOutbox(\n        storage => ...,\n        transport => ...,\n        settings => ...,\n        assembly => ...\n    );\n},\nsettings => settings.ServiceId = "ServiceName");\n'})}),"\n",(0,t.jsx)(n.h3,{id:"outbox-message",children:"Outbox Message"}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"Outbox message class name must be unique per service."})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"public class CreateCustomerCommandMessage : OutboxMessage\n{\n    public Guid Id { get; init; }\n\n    public string FirstName { get; init; }\n\n    public string LastName { get; init; }\n\n    public int Age { get; init; }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"outbox-definition",children:"Outbox Definition"}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["You do not need to define a outbox definition for each message.",(0,t.jsx)(n.br,{}),"\n","By default, the message will be published because receiver is not indicated."]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'internal class CreateCustomerCommandMessageDefinition : OutboxDefinition<CreateCustomerCommandMessage>\n{\n    public CreateCustomerCommandMessageDefinition() \n    {\n        Receiver = "Customers";\n    }\n}\n\n'})}),"\n",(0,t.jsx)(n.h3,{id:"adding-a-message-to-the-outbox",children:"Adding a message to the outbox"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"\n// Add in the same transaction the result of the business operation and message to outbox\n\nawait outbox.Add(message);\n\n// Commit transaction\n\n// After transaction is successfully commited, execute the following method\nawait outbox.TransactionCommited();\n\n"})}),"\n",(0,t.jsx)(n.h2,{id:"storage",children:"Storage"}),"\n",(0,t.jsxs)("table",{children:[(0,t.jsx)("tr",{children:(0,t.jsx)("td",{children:(0,t.jsx)("b",{children:"Options"})})}),(0,t.jsx)("tr",{children:(0,t.jsx)("td",{children:"In Memory (Default)"})}),(0,t.jsx)("tr",{children:(0,t.jsx)("td",{children:"Entity Framework Core (Relational)"})})]}),"\n",(0,t.jsx)(n.h2,{id:"transport",children:"Transport"}),"\n",(0,t.jsxs)("table",{children:[(0,t.jsx)("tr",{children:(0,t.jsx)("td",{children:(0,t.jsx)("b",{children:"Options"})})}),(0,t.jsx)("tr",{children:(0,t.jsx)("td",{children:"In Memory (Default)"})}),(0,t.jsx)("tr",{children:(0,t.jsx)("td",{children:"Apache Kafka "})})]}),"\n",(0,t.jsx)(n.h2,{id:"settings",children:"Settings"}),"\n",(0,t.jsx)(n.h3,{id:"add-messages-to-transport-settings",children:"Add messages to transport settings"}),"\n",(0,t.jsxs)("table",{children:[(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)("b",{children:"Name"})}),(0,t.jsx)("td",{children:(0,t.jsx)("b",{children:"Type"})}),(0,t.jsx)("td",{children:(0,t.jsx)("b",{children:"Default Value"})}),(0,t.jsx)("td",{children:(0,t.jsx)("b",{children:"Description"})})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"MaxBatchSize"}),(0,t.jsx)("td",{children:"int"}),(0,t.jsx)("td",{children:"5000"}),(0,t.jsx)("td",{children:"Maximum number of processing messages per job."})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"LockTimeout"}),(0,t.jsx)("td",{children:"TimeSpan"}),(0,t.jsx)("td",{children:"10 seconds"}),(0,t.jsx)("td",{children:"Time to live for message blocking."})]})]}),"\n",(0,t.jsx)(n.h3,{id:"clean-up-outbox-settings",children:"Clean up outbox settings"}),"\n",(0,t.jsxs)("table",{children:[(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)("b",{children:"Name"})}),(0,t.jsx)("td",{children:(0,t.jsx)("b",{children:"Type"})}),(0,t.jsx)("td",{children:(0,t.jsx)("b",{children:"Default Value"})}),(0,t.jsx)("td",{children:(0,t.jsx)("b",{children:"Description"})})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"MaxBatchSize"}),(0,t.jsx)("td",{children:"int"}),(0,t.jsx)("td",{children:"10000"}),(0,t.jsx)("td",{children:"Maximum number of messages to clean up per job."})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"IsEnabled"}),(0,t.jsx)("td",{children:"bool"}),(0,t.jsx)("td",{children:"true"}),(0,t.jsx)("td",{children:"Value responsible for whether the cleaning process is enabled."})]})]}),"\n",(0,t.jsx)(n.h3,{id:"configure-serialization",children:"Configure serialization"}),"\n",(0,t.jsxs)("table",{children:[(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)("b",{children:"Name"})}),(0,t.jsx)("td",{children:(0,t.jsx)("b",{children:"Extension"})})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"System.Text.Json (Default)"}),(0,t.jsx)("td",{children:"UseSystemTextJson()"})]})]}),"\n",(0,t.jsx)(n.h3,{id:"configure-compression",children:"Configure compression"}),"\n",(0,t.jsxs)("table",{children:[(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)("b",{children:"Name"})}),(0,t.jsx)("td",{children:(0,t.jsx)("b",{children:"Extension"})})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"No compression (Default)"}),(0,t.jsx)("td",{children:"UseNoCompression()"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"Brotli"}),(0,t.jsx)("td",{children:"UseBrotli()"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"GZip"}),(0,t.jsx)("td",{children:"UseGZip()"})]})]})]})}function x(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>d});var t=s(6540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);