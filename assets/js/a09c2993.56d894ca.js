"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[899],{1456:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var o=e(4848),i=e(8453);const r={sidebar_position:1},c="Introduction",a={id:"introduction",title:"Introduction",description:"Transactional box is an implementation of the outbox and inbox pattern in .NET.",source:"@site/docs/introduction.md",sourceDirName:".",slug:"/introduction",permalink:"/docs/introduction",draft:!1,unlisted:!1,editUrl:"https://github.com/adimiko/TransactionalBox/tree/main/documentation/docs/introduction.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Getting Started",permalink:"/docs/getting-started"}},s={},d=[{value:"General concept",id:"general-concept",level:2}];function u(t){const n={h1:"h1",h2:"h2",p:"p",...(0,i.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsx)(n.p,{children:"Transactional box is an implementation of the outbox and inbox pattern in .NET.\nEnsures eventual consistency when modules need to communicate with each other over the network."}),"\n",(0,o.jsx)(n.h2,{id:"general-concept",children:"General concept"}),"\n",(0,o.jsx)(n.p,{children:"TODO Big Picture"})]})}function l(t={}){const{wrapper:n}={...(0,i.R)(),...t.components};return n?(0,o.jsx)(n,{...t,children:(0,o.jsx)(u,{...t})}):u(t)}},8453:(t,n,e)=>{e.d(n,{R:()=>c,x:()=>a});var o=e(6540);const i={},r=o.createContext(i);function c(t){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function a(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:c(t.components),o.createElement(r.Provider,{value:n},t.children)}}}]);